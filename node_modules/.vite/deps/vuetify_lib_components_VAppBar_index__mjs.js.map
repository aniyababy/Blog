{
  "version": 3,
  "sources": ["../../vuetify/src/components/VAppBar/VAppBar.tsx", "../../vuetify/src/components/VToolbar/VToolbar.tsx", "../../vuetify/src/components/VToolbar/VToolbarTitle.tsx", "../../vuetify/src/composables/scroll.ts", "../../vuetify/src/components/VAppBar/VAppBarNavIcon.tsx", "../../vuetify/src/components/VToolbar/VToolbarItems.tsx", "../../vuetify/src/components/VAppBar/VAppBarTitle.tsx"],
  "sourcesContent": ["// Styles\nimport './VAppBar.sass'\n\n// Components\nimport { makeVToolbarProps, VToolbar } from '@/components/VToolbar/VToolbar'\n\n// Composables\nimport { makeLayoutItemProps, useLayoutItem } from '@/composables/layout'\nimport { makeScrollProps, useScroll } from '@/composables/scroll'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { useSsrBoot } from '@/composables/ssrBoot'\n\n// Utilities\nimport { computed, ref, toRef, watch } from 'vue'\nimport { genericComponent, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { VToolbarSlots } from '@/components/VToolbar/VToolbar'\n\nexport const VAppBar = genericComponent<VToolbarSlots>()({\n  name: 'VAppBar',\n\n  props: {\n    scrollBehavior: String,\n    modelValue: {\n      type: Boolean,\n      default: true,\n    },\n    location: {\n      type: String as PropType<'top' | 'bottom'>,\n      default: 'top',\n      validator: (value: any) => ['top', 'bottom'].includes(value),\n    },\n\n    ...makeVToolbarProps(),\n    ...makeLayoutItemProps(),\n    ...makeScrollProps(),\n\n    height: {\n      type: [Number, String],\n      default: 64,\n    },\n  },\n\n  emits: {\n    'update:modelValue': (value: boolean) => true,\n  },\n\n  setup (props, { slots }) {\n    const vToolbarRef = ref<VToolbar>()\n    const isActive = useProxiedModel(props, 'modelValue')\n    const scrollBehavior = computed(() => {\n      const behavior = new Set(props.scrollBehavior?.split(' ') ?? [])\n      return {\n        hide: behavior.has('hide'),\n        // fullyHide: behavior.has('fully-hide'),\n        inverted: behavior.has('inverted'),\n        collapse: behavior.has('collapse'),\n        elevate: behavior.has('elevate'),\n        fadeImage: behavior.has('fade-image'),\n        // shrink: behavior.has('shrink'),\n      }\n    })\n    const canScroll = computed(() => {\n      const behavior = scrollBehavior.value\n      return (\n        behavior.hide ||\n        // behavior.fullyHide ||\n        behavior.inverted ||\n        behavior.collapse ||\n        behavior.elevate ||\n        behavior.fadeImage ||\n        // behavior.shrink ||\n        !isActive.value\n      )\n    })\n    const {\n      currentScroll,\n      currentThreshold,\n      computedScrollThreshold,\n      isScrollingUp,\n    } = useScroll(props, { canScroll })\n\n    const isCollapsed = computed(() => props.collapse || (\n      scrollBehavior.value.collapse &&\n      (scrollBehavior.value.inverted ? currentScroll.value < 1 : currentScroll.value > 0)\n    ))\n    const isFlat = computed(() => props.flat || (\n      scrollBehavior.value.elevate &&\n      currentScroll.value === (scrollBehavior.value.inverted ? 1 : 0)\n    ))\n    const scrollRatio = computed(() => Math.min(\n      ((currentThreshold.value - currentScroll.value) / currentThreshold.value) || 1,\n      1\n    ))\n    const opacity = computed(() => (\n      scrollBehavior.value.fadeImage\n        ? (scrollBehavior.value.inverted ? 1 - scrollRatio.value : scrollRatio.value)\n        : undefined\n    ))\n    const height = computed(() => {\n      if (scrollBehavior.value.hide && scrollBehavior.value.inverted) return 0\n\n      const height = vToolbarRef.value?.contentHeight ?? 0\n      const extensionHeight = vToolbarRef.value?.extensionHeight ?? 0\n\n      return (height + extensionHeight)\n    })\n    function setActive () {\n      const val = currentScroll.value\n      if (scrollBehavior.value.hide) {\n        if (scrollBehavior.value.inverted) {\n          isActive.value = val > computedScrollThreshold.value\n        } else {\n          isActive.value = isScrollingUp.value || (val < computedScrollThreshold.value)\n        }\n      } else if (scrollBehavior.value.inverted) {\n        isActive.value = currentScroll.value === 0\n      } else {\n        isActive.value = true\n      }\n    }\n\n    watch(currentScroll, setActive, { immediate: true })\n    watch(scrollBehavior, setActive)\n\n    const { ssrBootStyles } = useSsrBoot()\n    const { layoutItemStyles } = useLayoutItem({\n      id: props.name,\n      order: computed(() => parseInt(props.order, 10)),\n      position: toRef(props, 'location'),\n      layoutSize: height,\n      elementSize: ref(undefined),\n      active: isActive,\n      absolute: toRef(props, 'absolute'),\n    })\n\n    useRender(() => {\n      const [toolbarProps] = VToolbar.filterProps(props)\n\n      return (\n        <VToolbar\n          ref={ vToolbarRef }\n          class={[\n            'v-app-bar',\n            {\n              'v-app-bar--bottom': props.location === 'bottom',\n            },\n            props.class,\n          ]}\n          style={[\n            {\n              ...layoutItemStyles.value,\n              '--v-toolbar-image-opacity': opacity.value,\n              height: undefined,\n              ...ssrBootStyles.value,\n            },\n            props.style,\n          ]}\n          { ...toolbarProps }\n          collapse={ isCollapsed.value }\n          flat={ isFlat.value }\n          v-slots={ slots }\n        />\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VAppBar = InstanceType<typeof VAppBar>\n", "// Styles\nimport './VToolbar.sass'\n\n// Components\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VExpandTransition } from '@/components/transitions'\nimport { VImg } from '@/components/VImg'\nimport { VToolbarTitle } from './VToolbarTitle'\n\n// Composables\nimport { makeBorderProps, useBorder } from '@/composables/border'\nimport { makeComponentProps } from '@/composables/component'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { provideDefaults } from '@/composables/defaults'\nimport { useBackgroundColor } from '@/composables/color'\n\n// Utilities\nimport { computed, ref, toRef } from 'vue'\nimport { convertToUnit, genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\n\nconst allowedDensities = [null, 'prominent', 'default', 'comfortable', 'compact'] as const\n\nexport type Density = null | 'prominent' | 'default' | 'comfortable' | 'compact'\n\nexport const makeVToolbarProps = propsFactory({\n  absolute: Boolean,\n  collapse: Boolean,\n  color: String,\n  density: {\n    type: String as PropType<Density>,\n    default: 'default',\n    validator: (v: any) => allowedDensities.includes(v),\n  },\n  extended: Boolean,\n  extensionHeight: {\n    type: [Number, String],\n    default: 48,\n  },\n  flat: Boolean,\n  floating: Boolean,\n  height: {\n    type: [Number, String],\n    default: 64,\n  },\n  image: String,\n  title: String,\n\n  ...makeBorderProps(),\n  ...makeComponentProps(),\n  ...makeElevationProps(),\n  ...makeRoundedProps(),\n  ...makeTagProps({ tag: 'header' }),\n  ...makeThemeProps(),\n}, 'v-toolbar')\n\nexport type VToolbarSlots = {\n  default: []\n  image: []\n  prepend: []\n  append: []\n  title: []\n  extension: []\n}\n\nexport const VToolbar = genericComponent<VToolbarSlots>()({\n  name: 'VToolbar',\n\n  props: makeVToolbarProps(),\n\n  setup (props, { slots }) {\n    const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(toRef(props, 'color'))\n    const { borderClasses } = useBorder(props)\n    const { elevationClasses } = useElevation(props)\n    const { roundedClasses } = useRounded(props)\n    const { themeClasses } = provideTheme(props)\n\n    const isExtended = ref(!!(props.extended || slots.extension?.()))\n    const contentHeight = computed(() => parseInt((\n      Number(props.height) +\n      (props.density === 'prominent' ? Number(props.height) : 0) -\n      (props.density === 'comfortable' ? 8 : 0) -\n      (props.density === 'compact' ? 16 : 0)\n    ), 10))\n    const extensionHeight = computed(() => isExtended.value\n      ? parseInt((\n        Number(props.extensionHeight) +\n        (props.density === 'prominent' ? Number(props.extensionHeight) : 0) -\n        (props.density === 'comfortable' ? 4 : 0) -\n        (props.density === 'compact' ? 8 : 0)\n      ), 10)\n      : 0\n    )\n\n    provideDefaults({\n      VBtn: {\n        variant: 'text',\n      },\n    })\n\n    useRender(() => {\n      const hasTitle = !!(props.title || slots.title)\n      const hasImage = !!(slots.image || props.image)\n\n      const extension = slots.extension?.()\n      isExtended.value = !!(props.extended || extension)\n\n      return (\n        <props.tag\n          class={[\n            'v-toolbar',\n            {\n              'v-toolbar--absolute': props.absolute,\n              'v-toolbar--collapse': props.collapse,\n              'v-toolbar--flat': props.flat,\n              'v-toolbar--floating': props.floating,\n              [`v-toolbar--density-${props.density}`]: true,\n            },\n            backgroundColorClasses.value,\n            borderClasses.value,\n            elevationClasses.value,\n            roundedClasses.value,\n            themeClasses.value,\n            props.class,\n          ]}\n          style={[\n            backgroundColorStyles.value,\n            props.style,\n          ]}\n        >\n          { hasImage && (\n            <div key=\"image\" class=\"v-toolbar__image\">\n              { !slots.image ? (\n                <VImg\n                  key=\"image-img\"\n                  cover\n                  src={ props.image }\n                />\n              ) : (\n                <VDefaultsProvider\n                  key=\"image-defaults\"\n                  disabled={ !props.image }\n                  defaults={{\n                    VImg: {\n                      cover: true,\n                      src: props.image,\n                    },\n                  }}\n                  v-slots:default={ slots.image }\n                />\n              )}\n            </div>\n          )}\n\n          <VDefaultsProvider\n            defaults={{\n              VTabs: {\n                height: convertToUnit(contentHeight.value),\n              },\n            }}\n          >\n            <div\n              class=\"v-toolbar__content\"\n              style={{ height: convertToUnit(contentHeight.value) }}\n            >\n              { slots.prepend && (\n                <div class=\"v-toolbar__prepend\">\n                  { slots.prepend?.() }\n                </div>\n              )}\n\n              { hasTitle && (\n                <VToolbarTitle key=\"title\" text={ props.title }>\n                  {{ text: slots.title }}\n                </VToolbarTitle>\n              )}\n\n              { slots.default?.() }\n\n              { slots.append && (\n                <div class=\"v-toolbar__append\">\n                  { slots.append?.() }\n                </div>\n              )}\n            </div>\n          </VDefaultsProvider>\n\n          <VDefaultsProvider\n            defaults={{\n              VTabs: {\n                height: convertToUnit(extensionHeight.value),\n              },\n            }}\n          >\n            <VExpandTransition>\n              { isExtended.value && (\n                <div\n                  class=\"v-toolbar__extension\"\n                  style={{ height: convertToUnit(extensionHeight.value) }}\n                >\n                  { extension }\n                </div>\n              )}\n            </VExpandTransition>\n          </VDefaultsProvider>\n        </props.tag>\n      )\n    })\n\n    return {\n      contentHeight,\n      extensionHeight,\n    }\n  },\n})\n\nexport type VToolbar = InstanceType<typeof VToolbar>\n", "// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { makeTagProps } from '@/composables/tag'\n\n// Utilities\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\nexport const makeVToolbarTitleProps = propsFactory({\n  text: String,\n\n  ...makeComponentProps(),\n  ...makeTagProps(),\n}, 'v-toolbar-title')\n\nexport type VToolbarTitleSlots = {\n  default: []\n  text: []\n}\n\nexport const VToolbarTitle = genericComponent<VToolbarTitleSlots>()({\n  name: 'VToolbarTitle',\n\n  props: makeVToolbarTitleProps(),\n\n  setup (props, { slots }) {\n    useRender(() => {\n      const hasText = !!(slots.default || slots.text || props.text)\n\n      return (\n        <props.tag\n          class={[\n            'v-toolbar-title',\n            props.class,\n          ]}\n          style={ props.style }\n        >\n          { hasText && (\n            <div class=\"v-toolbar-title__placeholder\">\n              { slots.text ? slots.text() : props.text }\n\n              { slots.default?.() }\n            </div>\n          )}\n        </props.tag>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VToolbarTitle = InstanceType<typeof VToolbarTitle>\n", "// Utilities\nimport {\n  computed,\n  getCurrentInstance,\n  onBeforeUnmount,\n  onMounted,\n  ref,\n  watch,\n} from 'vue'\nimport { consoleWarn, propsFactory } from '@/util'\n\n// Types\nimport type { Ref } from 'vue'\n\nexport interface ScrollProps {\n  scrollTarget?: string\n  scrollThreshold?: string | number\n}\n\nexport interface ThresholdMetCallbackData {\n  isScrollingUp: boolean\n  currentThreshold: number\n  savedScroll: Ref<number>\n}\n\n// Composables\nexport const makeScrollProps = propsFactory({\n  scrollTarget: {\n    type: String,\n  },\n  scrollThreshold: {\n    type: [String, Number],\n  },\n}, 'scroll')\n\nexport interface ScrollArguments {\n  thresholdMetCallback?: (data: ThresholdMetCallbackData) => void\n  scrollThreshold?: Readonly<Ref<number>>\n  canScroll?: Readonly<Ref<boolean>>\n}\n\nexport function useScroll (\n  props: ScrollProps,\n  args: ScrollArguments = {},\n) {\n  const { thresholdMetCallback, scrollThreshold, canScroll } = args\n  let previousScroll = 0\n  const target = ref<Element | Window | null>(null)\n  const currentScroll = ref(0)\n  const savedScroll = ref(0)\n  const currentThreshold = ref(0)\n  const isScrollActive = ref(false)\n  const isScrollingUp = ref(false)\n\n  const computedScrollThreshold = computed(() => {\n    return Number(props.scrollThreshold ?? scrollThreshold ?? 300)\n  })\n\n  const onScroll = () => {\n    const targetEl = target.value\n\n    if (!targetEl || (canScroll && !canScroll.value)) return\n\n    previousScroll = currentScroll.value\n    currentScroll.value = ('window' in targetEl) ? targetEl.pageYOffset : targetEl.scrollTop\n\n    isScrollingUp.value = currentScroll.value < previousScroll\n    currentThreshold.value = Math.abs(currentScroll.value - computedScrollThreshold.value)\n  }\n\n  watch(isScrollingUp, () => {\n    savedScroll.value = savedScroll.value || currentScroll.value\n  })\n\n  watch(isScrollActive, () => {\n    savedScroll.value = 0\n  })\n\n  onMounted(() => {\n    watch(() => props.scrollTarget, scrollTarget => {\n      const newTarget = scrollTarget ? document.querySelector(scrollTarget) : window\n\n      if (!newTarget) {\n        consoleWarn(`Unable to locate element with identifier ${scrollTarget}`, getCurrentInstance())\n        return\n      }\n\n      if (newTarget === target.value) return\n\n      target.value?.removeEventListener('scroll', onScroll)\n      target.value = newTarget\n      target.value.addEventListener('scroll', onScroll, { passive: true })\n    }, { immediate: true })\n  })\n\n  onBeforeUnmount(() => {\n    target.value?.removeEventListener('scroll', onScroll)\n  })\n\n  thresholdMetCallback && watch(() => (\n    Math.abs(currentScroll.value - savedScroll.value) > computedScrollThreshold.value\n  ), thresholdMet => {\n    thresholdMet && thresholdMetCallback({\n      currentThreshold: currentThreshold.value,\n      isScrollingUp: isScrollingUp.value,\n      savedScroll,\n    })\n  }, { immediate: true })\n\n  // Do we need this? If yes - seems that\n  // there's no need to expose onScroll\n  canScroll && watch(canScroll, onScroll, { immediate: true })\n\n  return {\n    computedScrollThreshold,\n    currentScroll,\n    currentThreshold,\n    isScrollActive,\n\n    // required only for testing\n    // probably can be removed\n    // later (2 chars chlng)\n    isScrollingUp,\n    savedScroll,\n  }\n}\n", "// Components\nimport { VBtn } from '@/components/VBtn'\n\n// Composables\nimport { IconValue } from '@/composables/icons'\nimport { makeComponentProps } from '@/composables/component'\n\n// Utilities\nimport { genericComponent, useRender } from '@/util'\n\n// Types\nimport type { VBtnSlots } from '@/components/VBtn/VBtn'\n\nexport const VAppBarNavIcon = genericComponent<VBtnSlots>()({\n  name: 'VAppBarNavIcon',\n\n  props: {\n    icon: {\n      type: IconValue,\n      default: '$menu',\n    },\n\n    ...makeComponentProps(),\n  },\n\n  setup (props, { slots }) {\n    useRender(() => (\n      <VBtn\n        class={[\n          'v-app-bar-nav-icon',\n          props.class,\n        ]}\n        icon={ props.icon }\n        style={ props.style }\n        v-slots={ slots }\n      />\n    ))\n\n    return {}\n  },\n})\n\nexport type VAppBarNavIcon = InstanceType<typeof VAppBarNavIcon>\n", "// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { makeVariantProps } from '@/composables/variant'\nimport { provideDefaults } from '@/composables/defaults'\n\n// Utilities\nimport { genericComponent, useRender } from '@/util'\nimport { toRef } from 'vue'\n\nexport const VToolbarItems = genericComponent()({\n  name: 'VToolbarItems',\n\n  props: {\n    ...makeComponentProps(),\n    ...makeVariantProps({ variant: 'text' }),\n  },\n\n  setup (props, { slots }) {\n    provideDefaults({\n      VBtn: {\n        color: toRef(props, 'color'),\n        height: 'inherit',\n        variant: toRef(props, 'variant'),\n      },\n    })\n\n    useRender(() => (\n      <div\n        class={[\n          'v-toolbar-items',\n          props.class,\n        ]}\n        style={ props.style }\n      >\n        { slots.default?.() }\n      </div>\n    ))\n\n    return {}\n  },\n})\n\nexport type VToolbarItems = InstanceType<typeof VToolbarItems>\n", "// Components\nimport { VToolbarTitle } from '@/components/VToolbar'\n\n// Utilities\nimport { makeVToolbarTitleProps } from '@/components/VToolbar/VToolbarTitle'\nimport { genericComponent, useRender } from '@/util'\n\n// Types\nimport type { VToolbarTitleSlots } from '@/components/VToolbar/VToolbarTitle'\n\nexport const VAppBarTitle = genericComponent<VToolbarTitleSlots>()({\n  name: 'VAppBarTitle',\n\n  props: makeVToolbarTitleProps(),\n\n  setup (props, { slots }) {\n    useRender(() => (\n      <VToolbarTitle\n        { ...props }\n        class=\"v-app-bar-title\"\n        v-slots={ slots }\n      />\n    ))\n\n    return {}\n  },\n})\n\nexport type VAppBarTitle = InstanceType<typeof VAppBarTitle>\n"],
  "mappings": "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",
  "names": ["makeVToolbarTitleProps", "propsFactory", "text", "String", "makeComponentProps", "makeTagProps", "VToolbarTitle", "genericComponent", "name", "props", "setup", "_ref", "slots", "useRender", "hasText", "default", "_createVNode", "tag", "class", "style", "allowedDensities", "makeVToolbarProps", "propsFactory", "absolute", "Boolean", "collapse", "color", "String", "density", "type", "default", "validator", "v", "includes", "extended", "extensionHeight", "Number", "flat", "floating", "height", "image", "title", "makeBorderProps", "makeComponentProps", "makeElevationProps", "makeRoundedProps", "makeTagProps", "tag", "makeThemeProps", "VToolbar", "genericComponent", "name", "props", "setup", "_ref", "slots", "backgroundColorClasses", "backgroundColorStyles", "useBackgroundColor", "toRef", "borderClasses", "useBorder", "elevationClasses", "useElevation", "roundedClasses", "useRounded", "themeClasses", "provideTheme", "isExtended", "ref", "extension", "contentHeight", "computed", "parseInt", "value", "provideDefaults", "VBtn", "variant", "useRender", "hasTitle", "hasImage", "_createVNode", "class", "style", "VImg", "VDefaultsProvider", "cover", "src", "VTabs", "convertToUnit", "prepend", "VToolbarTitle", "text", "append", "VExpandTransition", "makeScrollProps", "propsFactory", "scrollTarget", "type", "String", "scrollThreshold", "Number", "useScroll", "props", "args", "arguments", "length", "undefined", "thresholdMetCallback", "canScroll", "previousScroll", "target", "ref", "currentScroll", "savedScroll", "currentThreshold", "isScrollActive", "isScrollingUp", "computedScrollThreshold", "computed", "onScroll", "targetEl", "value", "pageYOffset", "scrollTop", "Math", "abs", "watch", "onMounted", "newTarget", "document", "querySelector", "window", "consoleWarn", "getCurrentInstance", "removeEventListener", "addEventListener", "passive", "immediate", "onBeforeUnmount", "thresholdMet", "VAppBar", "genericComponent", "name", "props", "scrollBehavior", "String", "modelValue", "type", "Boolean", "default", "location", "validator", "value", "includes", "makeVToolbarProps", "makeLayoutItemProps", "makeScrollProps", "height", "Number", "emits", "setup", "_ref", "slots", "vToolbarRef", "ref", "isActive", "useProxiedModel", "computed", "behavior", "Set", "split", "hide", "has", "inverted", "collapse", "elevate", "fadeImage", "canScroll", "currentScroll", "currentThreshold", "computedScrollThreshold", "isScrollingUp", "useScroll", "isCollapsed", "isFlat", "flat", "scrollRatio", "Math", "min", "opacity", "undefined", "contentHeight", "extensionHeight", "setActive", "val", "watch", "immediate", "ssrBootStyles", "useSsrBoot", "layoutItemStyles", "useLayoutItem", "id", "order", "parseInt", "position", "toRef", "layoutSize", "elementSize", "active", "absolute", "useRender", "toolbarProps", "VToolbar", "filterProps", "_createVNode", "_mergeProps", "class", "style", "VAppBarNavIcon", "genericComponent", "name", "props", "icon", "type", "IconValue", "default", "makeComponentProps", "setup", "_ref", "slots", "useRender", "_createVNode", "VBtn", "class", "style", "VToolbarItems", "genericComponent", "name", "props", "makeComponentProps", "makeVariantProps", "variant", "setup", "_ref", "slots", "provideDefaults", "VBtn", "color", "toRef", "height", "useRender", "_createVNode", "class", "style", "default", "VAppBarTitle", "genericComponent", "name", "props", "makeVToolbarTitleProps", "setup", "_ref", "slots", "useRender", "_createVNode", "VToolbarTitle", "_mergeProps"]
}
